// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using api.Data;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241017203117_UpdateProductSeedData")]
    partial class UpdateProductSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("api.models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("api.models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("api.models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "/assets/products/2.jpg",
                            Name = "Le Félin Victorien",
                            Price = 999.0m
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "/assets/products/3.jpg",
                            Name = "Papillon Bleu Éternel",
                            Price = 1999.0m
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "/assets/products/18.png",
                            Name = "Journal Cœur d’Or",
                            Price = 699.0m
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "/assets/products/5.jpg",
                            Name = "Route Sans Fin",
                            Price = 228.0m
                        },
                        new
                        {
                            Id = 5,
                            ImageUrl = "/assets/products/6.jpg",
                            Name = "Lune d’Argent",
                            Price = 19.99m
                        },
                        new
                        {
                            Id = 6,
                            ImageUrl = "/assets/products/8.jpg",
                            Name = "Cartes du Destin",
                            Price = 68.0m
                        },
                        new
                        {
                            Id = 7,
                            ImageUrl = "/assets/products/4.jpg",
                            Name = "Fleurs Pressées Héritage",
                            Price = 120.0m
                        },
                        new
                        {
                            Id = 8,
                            ImageUrl = "/assets/products/12.jpg",
                            Name = "Roses Rouges Éternelles",
                            Price = 40.0m
                        },
                        new
                        {
                            Id = 9,
                            ImageUrl = "/assets/products/9.jpg",
                            Name = "Yeux de Sirène",
                            Price = 800.0m
                        });
                });

            modelBuilder.Entity("api.models.OrderItem", b =>
                {
                    b.HasOne("api.models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("api.models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
